#!/bin/bash

for i in "$@"
do
case $i in
    --instance-type=*)
    INSTANCE_TYPE="${i#*=}"
    shift
    ;;
    --ssl-certificate=*)
    SSL_CERTIFICATE="${i#*=}"
    shift
    ;;
    --public-domain=*)
    PUBLIC_DOMAIN="${i#*=}"
    shift
    ;;
    --region=*)
    REGION="${i#*=}"
    shift
    ;;
    --include-nginx)
    INCLUDE_NGINX=YES
    shift
    ;;
esac
done

# Automated: Build AMI
packer build \
  -var "instance_type=${INSTANCE_TYPE}" \
  -var "ssl_certificate=${SSL_CERTIFICATE}" \
  -var "public_domain=${PUBLIC_DOMAIN}" \
  -var "include_nginx=${INCLUDE_NGINX}"\
  -var "region=${REGION}"\
  jitsi/aws-ebs.json



# Provision instance(s) for the zinc client
# TODO: Figure out how to share the secrets safely
# TODO: Figure out how to safely share the terraform.tstate (push to private bucket/pull from private bucket?)
# TODO: Parameterize this?
terraform apply -var-file clients/zinc.tfvars -var-file clients/zinc-secrets.tfvars
# Manually: Deploy instance:
#   * Apply a ssl certificate
scp jitsi/install-letsencrypt-cert.sh

#   * Configure Network setting
#     * Terraform tool could config it

# Manually release instance
#   * Point DNS record to the instance
